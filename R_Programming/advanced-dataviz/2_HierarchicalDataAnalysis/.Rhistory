ls
ls()
getwd()
install.packages('dplyr')
library(dplyr)
install.packages('dplyr',dependencies = TRUE, verbose = TRUE)
install.packages("dplyr", dependencies = TRUE, verbose = TRUE)
library(dplyr)
library(dplyr, warning(FALSE))
getwd()
library(dplyr, warning(FALSE))
library(dplyr, warnings(FALSE))
mtcars
damtcars = mtcars[1:10,c(1,4,6,7,9)]
damtcars
damtcars.mpg
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
mtcars
carsdata <- mtcars[5:25,]
carsdata
cars
carsdata
table(carsdata$mpg)
table(carsdata$cyl)
min(carsdata$mpg)
max(carsdata$mpg)
median(carsdata$mpg)
quantile(carsdata$mpg)
sd(carsdata$mpg)
mean(carsdata$mpg)
cor(carsdata$cyl,carsdata$mpg)
summary(carsdata)
str(carsdata)
library(ggplot2)
table(carsdata$mpg)
ggplot(
data = carsdata,
aes(x=cyl)) +
geom_bar() + # Create a bar chart;  of geometry. since we are making frequency chart
ggtitle("This is the main title ") +
xlab("X label") +
ylab("Y Label")
table(carsdata$cyl)
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram() +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=50) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=10) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=20) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=25) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(data=carsdata, aes(x=mpg,y=cyl)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
+ geom_point() +
+ ggtitle("Plotting Comparison Scatter Plot") +
+ xlab("Miles Per Gallon") +
+ ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
install.packages("markdown")
library(ggplot2)
ggplot() +
borders(database="world",colour="grey50",fill = "grey90") +
ggtitle("Base Map of world") +
xlab("") +
ylab("") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
install.packages("maps")
library(ggplot2)
ggplot() +
borders(database="world",colour="grey50",fill = "grey90") +
ggtitle("Base Map of world") +
xlab("") +
ylab("") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
setwd("/Users/ananyapa/Gdrive/LEARNING/R_Programming/advanced-dataviz/HierarchicalDataAnalysis")
hierar <- read.csv("Hierarchy.csv")
hierar
hierarchypath <- paste("All", hierar$Continent, hierar$Country, sep = "/")
hierarchypath
install.packages("data.tree")
library(data.tree)
# Creating a tree from the data frame
hierar$Path = hierarchypath
tree <- as.node(x = hierar,pathname = "Path" )
tree <- as.Node(x = hierar,pathname = "Path" )
hierar
tree
trees <- as.Node(x = hierar,pathname = "Path" )
trees <- as.Node(x = hierar,pathName = "Path" )
trees
# Plotting a tree
plot(trees)
# Plotting a tree
Install.packages("DiagrammeR")
# Plotting a tree
install.packages("DiagrammeR")
library(DiagrammeR)
plot(trees)
# we can modify the features of the tree
# Lets create the tree graph.
install.packages("igraph")
library(igraph)
library(igraph);
#Creating a treegraph
treegraph <- as.igraph(trees)
#Creating a treegraph
treegraph <- as.igraph(trees)
#Plotting the tree graph
plot(x = treegraph,
main = "Treegraph distribution of Movies")
# Assigning row names as country codes
row.names(hierar) <- hierar$Country
hierar
distances <- dist(hierar[,c(3,4)])
distances
distances
round(distances,0)
hcluster <- hclust(distances)
hcluster
# Creating the dendogram
plot(x = clusters, main = "Dendogram oh Countries where movie distributed")
# Creating the dendogram
plot(x = hcluster, main = "Dendogram oh Countries where movie distributed")
**Creating a Radial Tree**
install.packages("ape")
library(ape)
phylo <- as.phylo(hcluster)
phylo
#plotting the data
plot(x = phylo, type = "fab")
#plotting the data
plot(x = phylo, type = "fan")
install.packages("treemap")
library(treemap)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Continent",
type = "Categorical",
title = "Count of movies by continent and Country",
position.legend = "none",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Continent",
type = "categorical",
title = "Count of movies by continent and Country",
position.legend = "none",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("96B4BC","96B454")
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("96B4BC","96B454"),
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("#96B4BC","#96B454"),
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("#96B4D2","#96B454"),
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("#96B4D2","#96B4D2"),
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("#7F98FF","#96B4D2"),
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("#617DFF","#96B4D2"),
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
treemap(dtf = hierar,
index = c("Continent","Country"),
vSize = "Count",
vColor = "Box.Office",
type = "value",
palette = c("#3A59FF","#96B4D2"),
title = "Count of movies by continent and Country",
title.legend = "Average Box Office Revenue",
)
