ls
ls()
getwd()
install.packages('dplyr')
library(dplyr)
install.packages('dplyr',dependencies = TRUE, verbose = TRUE)
install.packages("dplyr", dependencies = TRUE, verbose = TRUE)
library(dplyr)
library(dplyr, warning(FALSE))
getwd()
library(dplyr, warning(FALSE))
library(dplyr, warnings(FALSE))
mtcars
damtcars = mtcars[1:10,c(1,4,6,7,9)]
damtcars
damtcars.mpg
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
mtcars
carsdata <- mtcars[5:25,]
carsdata
cars
carsdata
table(carsdata$mpg)
table(carsdata$cyl)
min(carsdata$mpg)
max(carsdata$mpg)
median(carsdata$mpg)
quantile(carsdata$mpg)
sd(carsdata$mpg)
mean(carsdata$mpg)
cor(carsdata$cyl,carsdata$mpg)
summary(carsdata)
str(carsdata)
library(ggplot2)
table(carsdata$mpg)
ggplot(
data = carsdata,
aes(x=cyl)) +
geom_bar() + # Create a bar chart;  of geometry. since we are making frequency chart
ggtitle("This is the main title ") +
xlab("X label") +
ylab("Y Label")
table(carsdata$cyl)
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram() +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=50) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=10) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=20) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=25) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(data=carsdata, aes(x=mpg,y=cyl)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
+ geom_point() +
+ ggtitle("Plotting Comparison Scatter Plot") +
+ xlab("Miles Per Gallon") +
+ ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
setwd("/Users/ananyapa/Gdrive/LEARNING/R_Programming/multivariate-dataviz")
movies <- read.csv("m2/Movies.csv")
getrow <- function(awards){
subs <- movies[movies$Awards == awards,]
tapply(subs$Box.Office, subs$Rating, mean)
}
getrow("Awards")
getrow("No Awards")
tabb <- rbind(getrow("No Awards"),getrow("Awards"))
tabb
tabb <- rbind(getrow("No Awards"),getrow("Won Awards"))
tabb
barplot(
height = tabb,
beside = TRUE,
main = "Average Box office rating as per Category",
xlab = "Category",
ylab = "Averate Movie Revenue"
legend = rownames(tabb)
)
barplot(
height = tabb,
beside = TRUE,
main = "Average Box office rating as per Category",
xlab = "Category",
ylab = "Averate Movie Revenue"
legend = rownames(tabb))
barplot(
height = tabb,
beside = TRUE,
main = "Average Box office rating as per Category",
xlab = "Category",
ylab = "Averate Movie Revenue",
legend = rownames(tabb))
barplot(
height = tabb,
main = "Average Box office rating as per Category",
xlab = "Category",
ylab = "Averate Movie Revenue",
legend = rownames(tabb))
#Creating the facetted bar chart
par(mfrow = c(1,2))
par(mfrow = c(1,2))
barplot(
height = getrow("No Awards"),
ylim = c(0,100)
main = "No Awards",
xlab = "Movie Category",
ylab = "Average Movie Revenue",
)
barplot(
height = getrow("Won Awards"),
ylim = c(0,100)
main = "Won Awards",
xlab = "Movie Category",
ylab = "Average Movie Revenue",
)
barplot(
height = getrow("No Awards"),
ylim = c(0,100),
main = "No Awards",
xlab = "Movie Category",
ylab = "Average Movie Revenue",
)
barplot(
height = getrow("Won Awards"),
ylim = c(0,100),
main = "Won Awards",
xlab = "Movie Category",
ylab = "Average Movie Revenue",
)
barplot(
height = getrow("No Awards"),
ylim = c(0,100),
col ="skyblue",
main = "No Awards",
xlab = "Movie Category",
ylab = "Average Movie Revenue",
)
barplot(
height = getrow("Won Awards"),
ylim = c(0,100),
col = "pink",
main = "Won Awards",
xlab = "Movie Category",
ylab = "Average Movie Revenue",
)
par(mfrow = c(1,1))
heatmap(x = tabb,
col = heat.colors(100),
scale = "none",
Colv = NA,
Rowv = NA,
margins = c(6,10),
main = "Average Box Office Revenue",
cexRow = 2
)
# Creating hte graph using GGPLOT2
library(ggplot2)
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = Awards)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
ggtitle("Average movie Box Office of Movie Categories as per Awards") +
xlab("Movie Ratings")
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = Awards)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = Awards)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack") +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack") +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack", aes(color = factor(Awards))) +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack", aes(color = factor(Rating))) +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = aes(color = factor(Rating)))) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack", aes(color = factor(Awards))) +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = aes(color = factor(Awards)))) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack", aes(color = factor(Awards))) +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = factor(Awards))) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack", aes(color = factor(Awards))) +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = factor(Awards))) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack", aes(color = factor(Rating))) +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
ggplot(data = movies, aes(x = Rating, y = Box.Office, fill = Awards)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack", aes(color = factor(Rating))) +
facet_wrap(facets = ~Awards) +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)")
library(dplyr)
table2 <- movies %>%
select(Rating, Box.Office,Awards) %>%
group_by(Rating,Awards) %>%
summarize(Box.Office = mean(Box.Office))
ggplot(data = table2,aes(x = Rating,y=Awards,fill=Box.Office)) +
geom_tile(stat = "identity") +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
ylab("Average Box Office Revenue (m$)") +
labs(fill = "Box Office\nRevenue")
ggplot(data = table2,aes(x = Rating,y=Awards,fill=Box.Office)) +
geom_tile(stat = "identity") +
ggtitle("Average movie Box Office of Movie Categories per Awards") +
xlab("Movie Ratings") +
labs(fill = "Box Office\nRevenue")
