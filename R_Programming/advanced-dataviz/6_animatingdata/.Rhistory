xlim = c(0,255),
ylim = c(0,17500),
col = palet[as.integer(period$Studio)],
pch = 19,
cex =2,
main = "Studio Revenues",
sub = period$Release,
ylab = "Box office Revenue",
xlab = "Number of Movie Releases"
)
if("animation" %in% rownames(installed.packages()) == FALSE) {
install.packages("animation")
}
library(animation)
ani.options(
interval = 0.67,
ani.width = 640,
ani.height = 480
)
animate <- function() {
for (i in 1:183) {
period = studios[studios$Period==1,]
# Plotting the data for this period
plot(
x = period$Count,
y = period$Box.Office,
xlim = c(0,255),
ylim = c(0,17500),
col = palet[as.integer(period$Studio)],
pch = 19,
cex =2,
main = "Studio Revenues",
sub = period$Release,
ylab = "Box office Revenue",
xlab = "Number of Movie Releases"
) # Plot
# Adding Legend
legend(
x = "bottomright",
as.character(levels(period$Studio)),
col = palet[as.integer(period$Studio)],
pch = 19,
cex = 0.75
) # Legend
} # For Loop
} # Animate function
saveVideo(
expr = animate(),
video.name = "Studios.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
animate <- function() {
for (i in 1:183) {
period = studios[studios$Period==i,]
# Plotting the data for this period
plot(
x = period$Count,
y = period$Box.Office,
xlim = c(0,255),
ylim = c(0,17500),
col = palet[as.integer(period$Studio)],
pch = 19,
cex =2,
main = "Studio Revenues",
sub = period$Release,
ylab = "Box office Revenue",
xlab = "Number of Movie Releases"
) # Plot
# Adding Legend
legend(
x = "bottomright",
as.character(levels(period$Studio)),
col = palet[as.integer(period$Studio)],
pch = 19,
cex = 0.75
) # Legend
} # For Loop
} # Animate function
saveVideo(
expr = animate(),
video.name = "Studios.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
movies <- read.csv("Movies.csv")
movies2014 <- movies[movies$Year==2014,]
library(lattice)
animate2<- function(){
for(i in 1:360){
plot <- cloud(
x = Box.Office ~ Critic.Score * Runtime,
data = movies2014,
type = c("p","h"),
pch = 16,
main = "Runtime critic score ",
xlab = "Runtime",
ylab = "Critic Score",
zlab = "Box Office Revenue",
R.mat = diag(4),
screen = list(
z = i,
y = 0,
x = -60
)
)
print(plot)
}
}
saveVideo(
expr = animate2(),
video.name = "Cloud.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
countries2<- read.csv("Countries2.csv")
library(ggplot2)
animate3<- function(){
for (i in -180:180) {
ggplot(data = countries2) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(0,-i,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, group = Group, fill = Count), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Movies Distribution across Europe") +
xlab("") +
ylab("") +
labs(color = "Movies") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plot)
}
}
saveVideo(
expr = animate3(),
video.name = "moviesaround.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
animate3<- function(){
for (i in -180:180) {
ggplot(data = countries2) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(0,i,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, group = Group, fill = Count), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Movies Distribution across Europe") +
xlab("") +
ylab("") +
labs(color = "Movies") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plot)
}
}
saveVideo(
expr = animate3(),
video.name = "moviesaround.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
library(maps)
saveVideo(
expr = animate3(),
video.name = "moviesaround.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
ggplot(data = countries2) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(41,-74,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, group = Group, fill = Count), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Movies Distribution across Europe") +
xlab("") +
ylab("") +
labs(color = "Movies") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
saveVideo(
expr = animate3(),
video.name = "moviesaround.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
1:180
-1:180
-(-180:180)
animate3<- function(){
for (i in -180:180) {
plot <- ggplot(data = countries2) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(0,i,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, group = Group, fill = Count), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Movies Distribution across Europe") +
xlab("") +
ylab("") +
labs(color = "Movies") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plot)
}
}
saveVideo(
expr = animate3(),
video.name = "moviesaround.mp4",
ffmpeg = "/installed/ffmpeg",
other.opts = "-r 15 -pix_fmt yuv420p"
)
covidcases <- read.csv("covidcases.csv")
covidcases
any(covidcases$Active_Cases)
is.na(any(covidcases$Active_Cases))
is.na(any(covidcases$Active_Cases))
summary(covidcases)
complete.cases(covidcases[,6])
final[complete.cases(final[ , 5:6]),]
complete.cases(covidcases[,6])
covidcases[complete.cases(covidcases[,6]),]
activecovid <- covidcases[complete.cases(covidcases[,6]),]
clear
length(activecovid)
activecovid
Â¬
activecovid
plot <- ggplot(data = activecovid) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(0,i,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, group = Group, fill = Active_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Active Covid Cases on 19-June") +
xlab("") +
ylab("") +
labs(color = "Covid-19") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
plot <- ggplot(data = activecovid) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(41,-74,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, group = Group, fill = Active_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Active Covid Cases on 19-June") +
xlab("") +
ylab("") +
labs(color = "Covid-19") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plot)
plotworld <- ggplot(data = activecovid) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(41,-74,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, group = Group, fill = Active_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Active Covid Cases on 19-June") +
xlab("") +
ylab("") +
labs(color = "Covid-19") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plotworld)
countries2
countries2$Group
plotworld <- ggplot(data = activecovid) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(41,-74,0)) +
geom_polygon(aes(x = Longitude, y = Latitude, fill = Active_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Active Covid Cases on 19-June") +
xlab("") +
ylab("") +
labs(color = "Covid-19") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plotworld)
plotworld <- ggplot(data = activecovid) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(41,-74,0)) +
geom_polygon(aes(x = Longitude, y = Lattitude, fill = Active_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Active Covid Cases on 19-June") +
xlab("") +
ylab("") +
labs(color = "Covid-19") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plotworld)
type(covidcases)
str(covidcases)
covidcases$Active_Cases <- as.integer(covidcases$Active_Cases)
print(plotworld)
plotworld <- ggplot(data = activecovid) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(41,-74,0)) +
geom_polygon(aes(x = Longitude, y = Lattitude, fill = Active_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Active Covid Cases on 19-June") +
xlab("") +
ylab("") +
labs(color = "Covid-19") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plotworld)
str(covidcases)
colnames(covidcases)
activecovid
colnames(activecovid)
activecovid$Active_Cases <- as.integer(activecovid$Active_Cases)
print(plotworld)
str(activecovid)
covidcases <- read.csv("covidcases.csv")
activecovid <- covidcases[complete.cases(covidcases[,6]),]
activecovid$Active_Cases
test <- as.integer(activecovid$Active_Cases)
test
test <- as.numeric(activecovid$Active_Cases)
test
activecovid$Active_Cases
clear
covidcases <- read.csv("covidcases.csv")
Â¬covidcases
covidcases
plotworld <- ggplot(data = covidcases) +
borders(database = "world", colour = "grey60", fill = "grey90") +
# In the Orientation lattitude is 0 i.e fixed tp equator and longitude raotates
# and 3rd para rotation is 0 so it looks like ratating in front
coord_map(projection = "ortho", orientation = c(41,-74,0)) +
geom_polygon(aes(x = Longitude, y = Lattitude, fill = Total_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Active Covid Cases on 19-June") +
xlab("") +
ylab("") +
labs(color = "Covid-19") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
print(plotworld)
ggplot(data = covidcases) +
borders(database = "world", colour = "grey60", fill = "grey90") +
geom_polygon(aes(x = Longitude, y = Lattitude, fill = Total_Cases), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Movies Distribution across Europe") +
xlab("") +
ylab("") +
labs(color = "Movies") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
map <- map_data("world")
head(map)
library(dplyr)
unique(map$region)
covidcases
covidcases$Country
clear
confirmed <- read.csv("confirmed.csv")
head(confirmed)
str(confirmed)
tail(confirmed)
jundata <- confirmed[confirmed$Date == "Jun 19, 2020",]
jundata
length(jundata$Entity)
coviddata <- jundata %>%
left_join(map,
by = c("Entity" = "region")) %>%
select(
Entity,
Longitude = long,
Lattitude = lat,
Group = group,
Order = order,
X,cases) %>%
arrange(Order) %>%
as.data.frame()
colnames(jundata)
coviddata <- jundata %>%
left_join(map,
by = c("Entity" = "region")) %>%
select(
Entity,
Longitude = long,
Lattitude = lat,
Group = group,
Order = order,
X.cases) %>%
arrange(Order) %>%
as.data.frame()
coviddata <- jundata %>%
left_join(map,
by = c("Entity" = "region")) %>%
select(
Entity,
Longitude = long,
Lattitude = lat,
Group = group,
Order = order,
X.cases.) %>%
arrange(Order) %>%
as.data.frame()
coviddata
ggplot(data = covidcases) +
borders(database = "world", colour = "grey60", fill = "grey90") +
geom_polygon(aes(x = Longitude, y = Lattitude, group = Group, fill = X.cases.), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Movies Distribution across Europe") +
xlab("") +
ylab("") +
labs(color = "Movies") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(data = coviddata) +
borders(database = "world", colour = "grey60", fill = "grey90") +
geom_polygon(aes(x = Longitude, y = Lattitude, group = Group, fill = X.cases.), color = "grey60") +
scale_fill_gradient(low = "white", high = "red") +
ggtitle("Movies Distribution across Europe") +
xlab("") +
ylab("") +
labs(color = "Movies") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
coviddata$Entity
unique(coviddata$Entity)
sort(coviddata, decreasing = TRUE)
order(coviddata$X.cases.)
