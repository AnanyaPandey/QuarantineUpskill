import numpy as np
import scipy 
from scipy stats import binom

# For Jupyter notebook 
![](<link for an image>)

=============================

# our data has two possible outcomes satisfied and unssatisfied
# binomial distribution 

print(binom.pmf(k=19, n=25, p=0.65))
# k = no of success
# n = total no of trials
# p = prob od successs

# when K or more OR K or less number trails should be success out of n 
# prob of 0 + 1 + ..... till K
# here cumulative distributive function is needed

print(binom.cdf(2,20,0.06))

===============================

Poisson distribution
from scipy.stats import poisson

# customer arrival is poisson distribution. 
# 3.2 customers come every 4 minutes, what is prob that 5 cusstomer come arrive in 4 min # interval during weekend
# unit of both is same ( 4 min ) 
poisson.pmf(5,3.2)


# Same Question what is prob >7 in 4 min interval 
poisson.cdf(7,3.2)

# Same question : What is the prob of customers coming >10 every 8 min. 
# unit of X and Lambda is not same 

poisson.pmf(10, 2*3.2) 

============================================

Uniform Dist

time to assemble plastic : 27 - 39 seconds what is the prob that assembly time is between 30 - 35 seconds

from scipy.stats import uniform
data = np.arange(27,39)
uniform.mean(loc=27, scale = 12)
uniform.cdf(np.arange(30,36,1),loc=27,scale=12)
# This will return an array of probabilities from p(30) -> p(35)
# scale is the range of uniform distribution.

# Question

uniform.mean(loc=200, scale=upper-lower)
uniform.std(loc=200, scale=982)


==================================

Normal Distribution
from scipy.stats import norm
valu,men,sdd = 68,65,2.5

print(norm.cdf(valu,men,sdd))
# CDF gives probability fmro -inf to XValue
# CDF  X > value
print(1- norm.cdf(valu,men,sdd))

# prob between val1 and val2
print(norm.cdf(val2,men,sdd) - norm.cdf(val1,men.sdd))

# finding The Z value from the given area ( prob )
norm.ppf(0.95)

==============================================
# Hypegeometric distribution.

from scipy.stats import hypergeom
pval = hypergeom.sf(0,18,3,12)
# Survival function.
sf(x-1, N, n, A)
x => 3 or more 
N => 18
n => 3
A => no of success in population
 
 
# Question
# 18 officer qualify for promotion; 11 of them are hispanic.
# only 5 of the total gor promoted. given officers are chosen at random, 
# what is prob that 2 or less promoted officers are hispanic ?

pval = hypergeom.cdf(2,18, 5,11)

==============================================================================

# Exponential Distribution
Mfg process, parts are randmly selected and testd, Defects occur 1.38 defects every 20 minutes during production(that sounds like poisson), what is the probability that less than 15 minutes has passed, between any two defects. 

# no of defects between time = separate here, time between defects so Exponential!!
lambda = 1/mu = 1/1.38 

from scipy.stats import expon
expon.cdf(less than 15min/20 min, loc=0 (lower limit), y = (x- lower limit)/range  )
expon.cdf(15/20,loc=0,(1-0)/1.38)
  





