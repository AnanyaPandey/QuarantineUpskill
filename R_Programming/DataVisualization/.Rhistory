ls
ls()
getwd()
install.packages('dplyr')
library(dplyr)
install.packages('dplyr',dependencies = TRUE, verbose = TRUE)
install.packages("dplyr", dependencies = TRUE, verbose = TRUE)
library(dplyr)
library(dplyr, warning(FALSE))
getwd()
library(dplyr, warning(FALSE))
library(dplyr, warnings(FALSE))
mtcars
damtcars = mtcars[1:10,c(1,4,6,7,9)]
damtcars
damtcars.mpg
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
mtcars
carsdata <- mtcars[5:25,]
carsdata
cars
carsdata
table(carsdata$mpg)
table(carsdata$cyl)
min(carsdata$mpg)
max(carsdata$mpg)
median(carsdata$mpg)
quantile(carsdata$mpg)
sd(carsdata$mpg)
mean(carsdata$mpg)
cor(carsdata$cyl,carsdata$mpg)
summary(carsdata)
str(carsdata)
library(ggplot2)
table(carsdata$mpg)
ggplot(
data = carsdata,
aes(x=cyl)) +
geom_bar() + # Create a bar chart;  of geometry. since we are making frequency chart
ggtitle("This is the main title ") +
xlab("X label") +
ylab("Y Label")
table(carsdata$cyl)
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram() +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=50) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=10) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=20) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=25) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(data=carsdata, aes(x=mpg,y=cyl)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
+ geom_point() +
+ ggtitle("Plotting Comparison Scatter Plot") +
+ xlab("Miles Per Gallon") +
+ ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
getwd(0)
getwd()
setwd("/Users/ananyapa/Gdrive/LEARNING")
ls
getwd()
load(file = "DataVis.r")
load("DataVis.R")
setwd("/Users/ananyapa/Gdrive/LEARNING/R_Programming/DataVisualization")
load("DataVis.R")
movies <- read.csv("movies.csv")
ls
movies
head(movies)
typeof(movies)
# names(my_data)[names(my_data) == "Sepal.Length"] <- "sepal_length"
names(movies)[names(movies) == "Revenue..Millions."] <- "Runtime"
names(movies)
names(movies)[names(movies) == "Runtime..Minutes."] <- "Runlength"
names(movies)
movies$Description = NULL
names(movies)
head(movies$Actors)
head(movies)
names(movies)[names(movies) == "Runtime"] <- "Revenue"
plot(
x = movies$Revenue,
y = movies$Runlength,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lines(x = movies$Runlength, y = model$fitted.values,
col = "red",
lwd = 3)
plot(
x = movies$Runlength,
y = movies$Revenue,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lines(x = movies$Runlength, y = model$fitted.values,
col = "red",
lwd = 3)
len(movies$Runlength)
length(movies$Runlength)
length(model$fitted.values)
model$fitted.values
length(model$fitted.values)
model$fitted
plot(
x = movies$Runlength,
y = movies$Revenue,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lenlines(x = movies$Runlength, y = model$fitted,
col = "red",
lwd = 3)
plot(
x = movies$Runlength,
y = movies$Revenue,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lines(x = movies$Runlength, y = model$fitted,
col = "red",
lwd = 3)
plot(
x = movies$Runlength,
y = movies$Revenue,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lines(x = movies$Runlength[1:model$fitted], y = model$fitted,
col = "red",
lwd = 3)
plot(
x = movies$Runlength,
y = movies$Revenue,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lines(x = movies$Runlength[:model$fitted], y = model$fitted,
col = "red",
lwd = 3)
plot(
x = movies$Runlength,
y = movies$Revenue,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lines(x = movies$Runlength[model$fitted], y = model$fitted,
col = "red",
lwd = 3)
plot(
x = movies$Runlength,
y = movies$Revenue,
main = "Plotting Bivariate Quantitative",
xlab = "Revenue (Millions)",
ylab = "Movie LEngth (Minutes)"
)
model <- lm(movies$Revenue ~ movies$Runlength)
lines(x = movies$Runlength, y = model$fitted,
col = "red",
lwd = 3)
install.packages("hexbin")
hexbin <- hexbin(
x = movies$Runlength,
y = movies$Revenue,
xbins = 30,
xlab = "Movie Length",
ylab = "Revenue"
)
plot(hexbin, main = "Plotting using Hexbin")
install.packages("hexbin")
library(hexbin)
hexbin <- hexbin(
x = movies$Runlength,
y = movies$Revenue,
xbins = 30,
xlab = "Movie Length",
ylab = "Revenue"
)
plot(hexbin, main = "Plotting using Hexbin")
install.packages("MASS")
install.packages("MASS")
library(MASS)
density2d <- kde2d(
x = movies$Runlength,
y = movies$Revenue,
n = 50)
# Creating the Contour Plot
contour(
x = density2d$x,
y = density2d$y,
z = density2d$z,
main = "Plotting Contour",
xlab = "Movies Runtime",
ylab = "Movies Revenue")
any(is.na(movies))
is.na(movies)
movies$Revenue
is.na(movies$Revenue)
movies$Revenue[is.na(movies$Revenue)] <- mean(movies$Revenue)
is.na(movies$Revenue)
movies[is.na(movies$Revenue),]
movies$Revenue[is.na(movies$Revenue),]
movies[is.na(movies$Revenue),]
movies[is.na(movies$Revenue),]$Revenue
movies[is.na(movies$Revenue),]$Revenue <- mean(movies$Revenue)
is.na(movies$Revenue)
#movies[is.na(movies$Revenue),]$Revenue <- mean(movies$Revenue)
mean(movies$Revenue)
mean(movies$Revenue, na.rm=TRUE)
movies[is.na(movies$Revenue),]$Revenue <- mean(movies$Revenue, na.rm=TRUE)
is.na(movies$Revenue)
install.packages("MASS")
library(MASS)
density2d <- kde2d(
x = movies$Runlength,
y = movies$Revenue,
n = 50)
# Creating the Contour Plot
contour(
x = density2d$x,
y = density2d$y,
z = density2d$z,
main = "Plotting Contour",
xlab = "Movies Runtime",
ylab = "Movies Revenue")
install.packages("MASS")
image(x = density2d$x,
y = density2d$y,
z = density2d$z)
