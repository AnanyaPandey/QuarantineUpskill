File IO and Resource Management 

# Files are just one example of resources.
# Elements must be closed after use
# Python provides syntax or managing resources

Text v/s Binary
Rd RW files
Context Managers
With Keyword
With Blocks
Working with binary file format
File like objects
Creating context managers.

################################ open() ####################
# Files are stored as binary in python
# Text encoded to turn into Binary then again decoded into normal readable text.
# write() --> Encode to Binary
# read() --> Decode from Binary to Normal Text

import sys
sys.getdefaultencoding()
'utf-8'

########### Writing ############
# mode can be read write etc
# wt = write text
# r = read, w = write, a = append b = binary t = text
f = open('filename.txt', mode='wt', enocding = 'utf-8') 
f.write("Hello World")
f.close()

#### in widows a file might take an extra byte for native ending \n
#### so if in linux the file size is 78 bytes in windows it will be 79 bytes


