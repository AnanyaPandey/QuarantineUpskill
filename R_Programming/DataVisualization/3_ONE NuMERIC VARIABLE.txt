ONE NuMERIC VARIABLE 
Quantitative Univariate Analysis 

Base
Lattice
ggplot2

1.DOT PLOT 
how data is distributed along the variable

movies$Runtime..Minutes.
names(movies)[names(movies)=="Runtime..Minutes."] <- "Runtime"
# REnaming the column for ease 
# Runtime is in minutes

each dot represents an observation (a movie), here all observaions overlap each other 
so we can se a convenient single line with higher to lower density

2. Jitter plot 
Adds the noise along the y axis so that observations do not overlap each other
Jitter is like a scatterplot but with single variable, 
Specially good for large number of discrete numeric values 

3. BOX PLOT 
box and whisker plot : same single numeric variable can be represented using a box
telling the quantiles, 1st quartile, median, 3rd and max number.
It considers 1.5 times lowere and upper of the extremes 
Good for telling spread, and outliers.


4. histogram
approzimation of distribution by showing data in bins. hieght represent number of obs.
histogram can be for categorical as well (with numeric it needs binning)
Histogram can easily tell the skewness of the variable. 

5. DENSITY plot
density represent shows shape of the distribution like histogram with inifite binning.
location, spread and shape of data. It is smooth representation as a function
a prob density function. Entire area inside curve = 1

####################################################### BASE #######################################################
# DOTPLOT 
plot(x = movies$Runtime,
     y = rep(0,nrow(movies)),
                main = "Distribution",
                xlab = "Runtime",
                ylab = "",
                yaxt = "n",
                pch = 16,
                col = rgb(0,0,0,0.3))

# color = black , with transparency = 10% 
Although we draw the plot like a 2 dimensions it is actually showing a univariate data
rep(0,1000) # gives 1000 zeros as a vector which exactly is y in our plot.

Adding Jitter to the above plot. Jitter is the noise.

#JITTER PLOT
plot(x = movies$Runtime,
     y = jitter(rep(0,nrow(movies))),
     main = "Distribution of movies",
     xlab = "Runtime",
     ylab = "",
     yaxt = "n",
     pch = 16,
     col = rgb(0.0,0.0,0.0,0.5))

# since transparency is 50% 2 observations overlap to show a complete black spot

# BOX PLOT 
boxplot(x = movies$Runtime,
        horizontal = TRUE,
        col = "blue",
        main = "Boxplot Base, Movie Runtime",
        xlab = "Movie Runtime",
        ylab = "")

mean(movies$Runtime)
median(movies$Runtime)

# HISTOGRAM 

hist(x = movies$Runtime,
     col="skyblue",
     breaks=20,
     main = "Histogram, base, Movie runtime",
     xlab = "movie runtimes")

# breaks tell hw many observations to bin together

# DENSITY PLOT 
plot(x = density(movies$Runtime),
     col = "skyblue",
     lwd = 3,
     main = "Density Base, Movie Runtime",
     xlab = "Movies Runtime")

# PLOTTING ALL 4 plots on same plot 
# Param
par(mfrow = c(2,2)) # Two row Two Column 

plot(x = movies$Runtime,
     y = jitter(rep(0,nrow(movies))),
     main = "Distribution of movies",
     xlab = "Runtime",
     ylab = "",
     yaxt = "n",
     pch = 16,
     col = rgb(0.0,0.0,0.0,0.5))

boxplot(x = movies$Runtime,
        horizontal = TRUE,
        col = "blue",
        main = "Boxplot Base, Movie Runtime",
        xlab = "Movie Runtime",
        ylab = "")

hist(x = movies$Runtime,
     col="skyblue",
     breaks=20,
     main = "Histogram, base, Movie runtime",
     xlab = "movie runtimes")

plot(x = density(movies$Runtime),
     col = "skyblue",
     lwd = 3,
     main = "Density Base, Movie Runtime",
     xlab = "Movies Runtime")

############################################### LATTICE ####################################################



# Dotplot 
library(lattice)
stripplot(
  x = ~Runtime,
  data = movies,
  main = "Distribution, Dotplot, Lattice",
  xlab = "Runtime"
)

# JITTER PLOT 
stripplot(
  x = ~Runtime,
  jitter = TRUE,
  amount = 0.4,
  data = movies,
  main = "Distribution, Dotplot, Lattice",
  xlab = "Runtime"
)

# BWplot
bwplot(
  x = ~Runtime,
  data = movies,
  col = "skyblue",
  fill = "skyblue",
  main = "Distribution, boxplot, lattice",
  xlab = "Runtime"
)

# histogram 

histogram(
  x = ~Runtime,
  data = movies,
  breaks = 30,
  col = "skyblue",
  main = "Distribution, histogram, lattice",
  xlab = "Movies Runtime")

densityplot(x = ~Runtime,
            data = movies,
            col = "skyblue",
            lwd = 3,
            main = "Distribution, histogram, lattice",
            xlab = "Movies Runtime")

# Printing all 4 in one plot 

dott <- dotplot(  x = ~Runtime,
                  data = movies,
                  main = "Distribution, Dotplot, Lattice",
                  xlab = "Runtime")
boxx <- bwplot(
  x = ~Runtime,
  data = movies,
  col = "skyblue",
  fill = "skyblue",
  main = "Distribution, boxplot, lattice",
  xlab = "Runtime"
)

histt <- histogram(
  x = ~Runtime,
  data = movies,
  breaks = 30,
  col = "skyblue",
  main = "Distribution, histogram, lattice",
  xlab = "Movies Runtime",
  scales = list(y = list(draw = FALSE)))

dens <- densityplot(x = ~Runtime,
            data = movies,
            col = "skyblue",
            lwd = 3,
            main = "Distribution, histogram, lattice",
            xlab = "Movies Runtime",
            scales = list(y = list(draw = FALSE)))

print(x = dott, position = c(0,0.75,1,1),
      more = TRUE)
print(x = boxx, position = c(0,0.5,1,0.75),
      more = TRUE)
print(x = histt, position = c(0,0.25,1,0.50),
      more = TRUE)
print(x = dens, position = c(0,0,1,0.25))

# X MIN, Y MIN, X MAX, Y MAX
# indicating lower left and upper right corner of rectangle 


############################################## GGPLOT2 ###########################################


library(ggplot2)
ggplot(data = movies, aes(x = Runtime, stat = "count")) +
  geom_dotplot(binwidth = 1) +
  ggtitle("Distribution, dotplot, ggplot") +
  xlab("Movie Runtime") + 
  coord_cartesian(ylim = c(0, 0.50))

#VIOLIN STYLE DOTPLOT 
# Stack direction is center here.
ggplot(data = movies, aes(x = Runtime, stat = "count")) +
  geom_dotplot(binwidth = 1, stackdir = "center") + 
  ggtitle("violin style dotplot, ggplot, movies") +
  xlab("Movies Runtime")

#BOXPLOT
# Coordinate flip to show the boxplot horizontally
ggplot(data = movies, aes(x = Runtime, y=Runtime)) +
  geom_boxplot() +
  coord_flip() +
  ggtitle("Boxplot, ggplot, movies") +
  ylab("Movies Runtime") +
  xlab("") +
  theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())

# HISTOGRAM
ggplot(data = movies, aes(x = Runtime)) +
  geom_histogram(binwidth = 20, fill = "skyblue", col = "black") +
  ggtitle("Histogram of movies runtime") +
  xlab("Movies Runtime chart") +
  ylab("")
  
# DENSITY PLOT 
ggplot(data = movies, aes(x = Runtime)) +
  geom_density(col = "skyblue", lwd=2) +
  ggtitle("Histogram of movies runtime") +
  xlab("Movies Runtime chart") +
  ylab("")

# Clearing existing plot
dev.off()

# Allows us to draw in grid in graphics device
library(grid)

viewport <- viewport(layout = grid.layout(2,2))
pushViewport(viewport) # in our case it pushes to graphics device

dott <- ggplot(data = movies, aes(x = Runtime, stat = "count")) +
  geom_dotplot(binwidth = 1, stackdir = "center") + 
  ggtitle("violin style dotplot, ggplot, movies") +
  xlab("Movies Runtime")

boxx <- ggplot(data = movies, aes(x = Runtime, y=Runtime)) +
  geom_boxplot() +
  coord_flip() +
  ggtitle("Boxplot, ggplot, movies") +
  ylab("Movies Runtime") +
  xlab("") +
  theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())

histt <- ggplot(data = movies, aes(x = Runtime)) +
  geom_histogram(binwidth = 20, fill = "skyblue", col = "black") +
  ggtitle("Histogram of movies runtime") +
  xlab("Movies Runtime chart") +
  ylab("")

denss<- ggplot(data = movies, aes(x = Runtime)) +
  geom_density(col = "skyblue", lwd=2) +
  ggtitle("Histogram of movies runtime") +
  xlab("Movies Runtime chart") +
  ylab("")

print(x = dott, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(x = boxx, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(x = histt, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(x = denss, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))


