ls
ls()
getwd()
install.packages('dplyr')
library(dplyr)
install.packages('dplyr',dependencies = TRUE, verbose = TRUE)
install.packages("dplyr", dependencies = TRUE, verbose = TRUE)
library(dplyr)
library(dplyr, warning(FALSE))
getwd()
library(dplyr, warning(FALSE))
library(dplyr, warnings(FALSE))
mtcars
damtcars = mtcars[1:10,c(1,4,6,7,9)]
damtcars
damtcars.mpg
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
mtcars
carsdata <- mtcars[5:25,]
carsdata
cars
carsdata
table(carsdata$mpg)
table(carsdata$cyl)
min(carsdata$mpg)
max(carsdata$mpg)
median(carsdata$mpg)
quantile(carsdata$mpg)
sd(carsdata$mpg)
mean(carsdata$mpg)
cor(carsdata$cyl,carsdata$mpg)
summary(carsdata)
str(carsdata)
library(ggplot2)
table(carsdata$mpg)
ggplot(
data = carsdata,
aes(x=cyl)) +
geom_bar() + # Create a bar chart;  of geometry. since we are making frequency chart
ggtitle("This is the main title ") +
xlab("X label") +
ylab("Y Label")
table(carsdata$cyl)
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram() +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=50) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=10) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=20) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=25) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(data=carsdata, aes(x=mpg,y=cyl)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
+ geom_point() +
+ ggtitle("Plotting Comparison Scatter Plot") +
+ xlab("Miles Per Gallon") +
+ ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
install.packages("markdown")
library(ggplot2)
ggplot() +
borders(database="world",colour="grey50",fill = "grey90") +
ggtitle("Base Map of world") +
xlab("") +
ylab("") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
install.packages("maps")
library(ggplot2)
ggplot() +
borders(database="world",colour="grey50",fill = "grey90") +
ggtitle("Base Map of world") +
xlab("") +
ylab("") +
theme(panel.background = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
getwd()
setwd("/Users/ananyapa/Gdrive/Learning/R_Programming/advanced-dataviz/2_HierarchicalDataAnalysis")
hierarchy <- read.csv("Hierarchy.csv")
head(hierarchy)
setwd("/Users/ananyapa/Gdrive/Learning/R_Programming/advanced-dataviz/3_GraphnNetworkData")
setwd("/Users/ananyapa/Gdrive/Learning/R_Programming/advanced-dataviz/3_GraphnNetworkData")
actors <- read.csv("Actors.csv")
head(actors)
### Community /Cluster graphs
IT visualizes the dense connected data as a group. Also multiple colours can be used to represent the density.default(
Two different colours can be used to represent inter and intra cluster connections It is wasy to see the pattern using this graphs
setwd("/Users/ananyapa/Gdrive/Learning/R_Programming/advanced-dataviz/3_GraphnNetworkData")
actors <- read.csv("Actors.csv")
head(actors)
The data tells the pair of actors and in hoe many films they have worked together.But for the sake of simplicity
we consider only those data where they have acted 5 or more times
actors <- actors[,actors$Count>=5]
)
actors <- actors[,actors$Count>=5]
actors <- actors[actors$Count>=5,]
actors
library(igraph)
graph5 <- graph.data.frame(d = actorss, directed = FALSE)
graph5 <- graph.data.frame(d = actors, directed = FALSE)
graph5
plot(
x = graph5,
edge.curved = FALSE,
main = "Plotting the small graph of Actors"
)
actors <- read.csv("Actors.csv")
actors2 <- actors[actors$Count>=2,]
graph2 <- graph.data.frame(d = actors2, directed = FALSE)
plot(
x = graph2,
vertex.size = 2,
vertex.label = NA,
edge.curved = FALSE,
edge.width = edge_attr(graph2)$Count,
main = "Graphing more pairs"
)
plot(
x = graph5,
edge.curved = FALSE,
main = "Plotting the small graph of Actors"
)
clusters <- cluster_edge_betweenness(graph2)
plot(
x = clusters,
y = graph2,
vertex.size = 3,
vertex.label = NA,
edge.curved = FALSE,
main = "Acting Communities"
)
