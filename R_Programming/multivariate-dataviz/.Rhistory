ls
ls()
getwd()
install.packages('dplyr')
library(dplyr)
install.packages('dplyr',dependencies = TRUE, verbose = TRUE)
install.packages("dplyr", dependencies = TRUE, verbose = TRUE)
library(dplyr)
library(dplyr, warning(FALSE))
getwd()
library(dplyr, warning(FALSE))
library(dplyr, warnings(FALSE))
mtcars
damtcars = mtcars[1:10,c(1,4,6,7,9)]
damtcars
damtcars.mpg
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
mtcars
carsdata <- mtcars[5:25,]
carsdata
cars
carsdata
table(carsdata$mpg)
table(carsdata$cyl)
min(carsdata$mpg)
max(carsdata$mpg)
median(carsdata$mpg)
quantile(carsdata$mpg)
sd(carsdata$mpg)
mean(carsdata$mpg)
cor(carsdata$cyl,carsdata$mpg)
summary(carsdata)
str(carsdata)
library(ggplot2)
table(carsdata$mpg)
ggplot(
data = carsdata,
aes(x=cyl)) +
geom_bar() + # Create a bar chart;  of geometry. since we are making frequency chart
ggtitle("This is the main title ") +
xlab("X label") +
ylab("Y Label")
table(carsdata$cyl)
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram() +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=50) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=10) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=20) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(
data = carsdata,
aes(x=mpg)) +
geom_histogram(bins=25) +
ggtitle("Fuel Economy Master Frequency Table") +
xlab("X label") +
ylab("Y Label")
ggplot(data=carsdata, aes(x=mpg,y=cyl)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
+ geom_point() +
+ ggtitle("Plotting Comparison Scatter Plot") +
+ xlab("Miles Per Gallon") +
+ ylab("Number of Cylinders")
ggplot(data=carsdata, aes(x=cyl,y=mpg)) +
geom_point() +
ggtitle("Plotting Comparison Scatter Plot") +
xlab("Miles Per Gallon") +
ylab("Number of Cylinders")
#### Base graphics
setwd("/Users/ananyapa/Gdrive/LEARNING/R_Programming/multivariate-dataviz")
m1 <- read.csv("m1/TimeSeries.csv")
head(m1)
m1
facetplot <- function(index,name) {
values <- m1[,c{1,index}]  # subset the data and return all the rows of year and the required column
ymax <- max(m1$G) # we already know that max revenue from G hence taking G
plot(x = values,
type = "l",
ylim = c(0,ymax),
main = name,
xlab = "Year",
ylab = "Box office revenue")
}
facetplot <- function(index,name) {
values <- m1[,c(1,index)]  # subset the data and return all the rows of year and the required column
ymax <- max(m1$G) # we already know that max revenue from G hence taking G
plot(x = values,
type = "l",
ylim = c(0,ymax),
main = name,
xlab = "Year",
ylab = "Box office revenue")
}
# Data has revenue
# Creating horizontal facets
par(mfrow = c(1,4)) # with 1 row and 4 columns, all charts in a line
facetplot(2, "Guardian - G")
facetplot(3, "ParentG - PG")
facetplot(4, "Teenage - PG13")
facetplot(5, "Restricted - R")
par(mfrow = c(4,1)) # with 1 row and 4 columns, all charts in a line
facetplot(2, "Guardian - G")
facetplot(3, "ParentG - PG")
facetplot(4, "Teenage - PG13")
facetplot(5, "Restricted - R")
par(mfrow = c(2,2))
facetplot(2, "Guardian - G")
facetplot(3, "ParentG - PG")
facetplot(4, "Teenage - PG13")
facetplot(5, "Restricted - R")
# resetting
par(mfrow = c(1,2))
m2 <- read.csv("m1/TimeSeries2.csv")
m2
library(ggplot2)
ggplot(
data = m2,aes(x = Year,y = Box.Office)) +
geom_line() +
facet_grid(facets = .~Rating) +
ggtitle("Plotting movie revenue as per ratings") +
xlab("Movie Rating") +
ylab("Revenue")
ggplot(
data = m2,aes(x = Year,y = Box.Office)) +
geom_line() +
facet_grid(facets = Rating~.) +
ggtitle("Plotting movie revenue as per ratings") +
xlab("Movie Rating") +
ylab("Revenue")
ggplot(
data = m2,aes(x = Year,y = Box.Office)) +
geom_line() +
facet_wrap(facets = ~Rating) +
ggtitle("Plotting movie revenue as per ratings") +
xlab("Movie Rating") +
ylab("Revenue")
# Creating a 2D facet chart horizontal
m3 <- read.csv("m1/TimeSeries3.csv")
