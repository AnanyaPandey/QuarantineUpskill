# -*- coding: utf-8 -*-
"""PCA-Demo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1enjadV6R-jjZjcvCjGQf7RpIo7pF_0h6
"""

import numpy as np
import pandas as pd

df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/Principle Component Analysis/Wine.csv')

df.head()

df.columns

"""There are 3 Type of customers, and each might like a different type of wine. In the dataset we have lot of properties of different wines belonging to different customer likeliness. We have to reduce the dimensions of the wines based on the similoarities i.e. based on the variatuon this data caused. Then we need to predict which wine would be liked by which customer. When new wine arrives in shop we can use this predicted model to assign to one of the customers so that we can recommend the same to those customers."""

X = df.iloc[:,:-1].values
y = df.iloc[:,-1].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)

from sklearn.preprocessing import StandardScaler
sc= StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn.decomposition import PCA
pca = PCA(n_components=2)
X_train = pca.fit_transform(X_train)
X_test = pca.transform(X_test)

from sklearn.linear_model import LogisticRegression
clf = LogisticRegression(random_state=0)
clf.fit(X_train,y_train)

from sklearn.metrics import confusion_matrix,accuracy_score
y_pred = clf.predict(X_test)
cm = confusion_matrix(y_pred,y_test)
ac = accuracy_score(y_test,y_pred)
print(cm)
print(ac)

"""There is a 3x3 matrix of Confusion matrix because we have 3 segements of customers. 3 Output Classes."""

