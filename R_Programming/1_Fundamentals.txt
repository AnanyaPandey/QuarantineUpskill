R Programming Fundamentals 
######## R programming ###############

# Vectors are one dimensional aray 
vect1 = 1:10
vect2= seq(1,100,2)
dat1 = as.Date("2020-07-04")

m2 = matrix(data=seq(1,98,2),nrow=7,ncol=7)
list1 = list("Hello", 123.34, 45L, TRUE)

# Categorical values can be stored in a datatype called Factors
categories = c("male","female","transgender-male","transgender-female","male","male")
factor1 = factor(categories)

unclass(factor1)
[1] 2 1 4 3 2 2

# Therefore The levels(factor_variable) is iterable
levels(factor1)[3]
"transgender-male"

# DataFrame : a library pandas is used for dataframe in python

name = c("cat","dog","mouse","rabbit","parrot")
howmany = c(3,4,2,5,2)
IsPet = c(TRUE,TRUE,FALSE,FALSE,TRUE)
df = data.frame(name,howmany,IsPet)

#Slicing of data frame
df[1] OR df[1:3] will return the column 1 or columns 1 to 3  THIS RETURNS a LIST
df[,2] Returns 2nd column as a VECTOR

df[1,] # Will return entire first row 
df[1:3,] # Will return all first 3 Rows

df[1,3] Will return Firt row Third column, exact data. 

# Both of below return the same thing the name column of the data frame 
df$ColumnName
df$name ==== > Returns the factor (categorical) variable 
df['name'] ==== > Returns a list 

############## Subsetting the Data Frame #####################

df[c(2,4),]  # Returns a subset of dataframein the LIST format. 
# returns 2 and 4th row of the data frame. 

df[c(2,5),3] # returns 2nd and 5th row 3rd column data.
# subsetting returns a list. we can return a data frame by as.DataFrame()
df[1:5,] # Also works fine. 

# Another notation widely used for subseting is the [[]] format 
df[['ColName']]
df[['name']]
[1] cat    dog    mouse  rabbit parrot
Levels: cat dog mouse parrot rabbit

# most preffered is the df$NameofCol
# Subsetting based on cindition 

df[df$IsPet == TRUE,] # Return all the rows such that df$IsPet is TRUE
# Mostly data is filtered based on row wise. 

df[,'name'] # This also works, instead of number we can also mention name in string format 

####### R is a vectorized language ###########
All atomic data types of vectors of size 1 

animals = c('tiger','lion','cat','snake','bear')
df[df$name %in% animals, ]  # return all the rows such that the name is in these animal names 
df[df$name %in% c('lion','tiger','cat'), ] # return all the rows such that the name is in these animal names 

# Iterations on data is basic and powerful in R.
# installing packages

install.packages('dplyr', dependencies =TRUE)
library(dplyr) # to use it. 















